/*
	Add your SAP Business ByDesign scripting language implementation for:
		Business Object: BusinessPartner
		Node: Root
		Validation: OnSave 

		Script file signature
		----------------------------
		Returns: Boolean
		
	Note: 
	  - To access the elements of the business object node, 
	    use path expressions, for example, this.<element name>. 
	  - To use code completion, press CTRL+J. 
	  - The solution uses this script before an instance of the business object is saved to the data base.
		It can have a return value of either true or false, which determines whether the instance of the business object is saved or not.
		All fields in this business object are read-only and cannot be changed.
*/

import ABSL;

var errorCount = 0;

var bp = this.InternalID;
var bpName = this.Common.GetFirst().BusinessPartnerFormattedName;

if (this.BusinessPartnerDuplicateCheck.IsSet())
{
	var duplicate = this.BusinessPartnerDuplicateCheck.Result;

	var contacts = duplicate.BusinessPartner.Role.Where(k => k.RoleCode.content == "BUP001");
	//
	//var invoicing = duplicate.BusinessPartner.Role.Where(k => k.RoleCode.content == "CRM000");
	//
	//var nonInvc = duplicate.BusinessPartner.Role.Where(k => k.RoleCode.content == "ZCRM00");
	//if (duplicate.Count() > 0 && invoicing.Count() > 0)
	//{
	//foreach (var dup in duplicate)
	//{		
	////if (dup.RoundedSimilarityPercent >= 90)
	////{
	////raise Duplicacy.Create("E");
	////return false;
	////}			
	//
	//if (dup.RoundedSimilarityPercent >= 86)
	//{
	//
	//errorCount = errorCount + 1;
	//raise Duplicacy.Create("E");
	//return false;
	//
	//
	//}		
	//}
	//}

	//if (duplicate.Count() > 0 && nonInvc.Count() > 0)
	//{
	//foreach (var dup in duplicate)
	//{		
	////if (dup.RoundedSimilarityPercent >= 90)
	////{
	////raise Duplicacy.Create("E");
	////return false;
	////}			
	//
	//if (dup.RoundedSimilarityPercent >= 86)
	//{
	//
	//errorCount = errorCount + 1;
	//raise Duplicacy.Create("E");
	//return false;
	//
	//
	//}		
	//}
	//}




	if (duplicate.Count() > 0 && contacts.Count() > 0)
	{
		foreach (var dup in duplicate)
		{		
			//if (dup.RoundedSimilarityPercent >= 90)
			//{
			//raise Duplicacy.Create("E");
			//return false;
			//}			

			if (dup.RoundedSimilarityPercent >= 86)
			{
				//Query contacts from BusinessPartners
				var emailId = this.CurrentDefaultIsContactPersonFor.BusinessPartnerRelationship.ContactPerson.ContactPersonWorkplaceAddressInformation.ContactPersonWorkplaceAddress.DefaultEMail.URI.content;
				var query = BusinessPartner.QueryByCommunicationData;
				var selectionParams = query.CreateSelectionParams();
				selectionParams.Add(query.BusinessCharacterCode.content, "I", "EQ", "BUP001");
				var resultData = query.ExecuteDataOnly(selectionParams);
				selectionParams.Clear();
				// 2. Selection

				selectionParams.Add(query.EMailURI.content, "I", "EQ", emailId);
				// Result
				resultData = query.ExecuteDataOnly(selectionParams);
				resultData = resultData.Where(k => k.CategoryCode == "1");

				if (resultData.Count() > 0)
				{  
					errorCount = errorCount + 1;
					raise Duplicacy.Create("E");
					return false;
				}
				
			}		
		}
	   

	}

}

else
{
	if (this.CurrentDefaultIsContactPersonFor.IsSet())
	{
		if (this.CurrentDefaultIsContactPersonFor.BusinessPartnerRelationship.IsSet())
		{
			if (this.CurrentDefaultIsContactPersonFor.BusinessPartnerRelationship.ContactPerson.IsSet())
			{
				if (this.CurrentDefaultIsContactPersonFor.BusinessPartnerRelationship.ContactPerson.ContactPersonWorkplaceAddressInformation.IsSet())
				{	 
					if (this.CurrentDefaultIsContactPersonFor.BusinessPartnerRelationship.ContactPerson.ContactPersonWorkplaceAddressInformation.ContactPersonWorkplaceAddress.IsSet())
					{
						if (this.CurrentDefaultIsContactPersonFor.BusinessPartnerRelationship.ContactPerson.ContactPersonWorkplaceAddressInformation.ContactPersonWorkplaceAddress.DefaultEMail.IsSet())
						{
					  
							var emailId = this.CurrentDefaultIsContactPersonFor.BusinessPartnerRelationship.ContactPerson.ContactPersonWorkplaceAddressInformation.ContactPersonWorkplaceAddress.DefaultEMail.URI.content;
							if (!emailId.IsInitial())
							{
								var query = BusinessPartner.QueryByCommunicationData;
								//var resultData = query.ExecuteDataOnly();
								// 2. Selection
								var selectionParams = query.CreateSelectionParams();
								selectionParams.Add(query.EMailURI.content, "I", "EQ", emailId);
								// Result
								var resultData = query.ExecuteDataOnly(selectionParams);
								resultData = resultData.Where(k => k.CategoryCode == "1");
								if (resultData.Count() > 0)
								{
									foreach (var i in resultData)
									{
										if (i.InternalID != this.InternalID)
										{
											errorCount = errorCount + 1;
											raise Duplicacy.Create("E");
											return false;								  
								  
										}
								
									}
								}
								//if (resultData.Count() > 0 && resultData.GetFirst().InternalID != this.InternalID)
								//{  
									//errorCount = errorCount + 1;
									//raise Duplicacy.Create("E");
									//return false;
	//
								//}
							}
						}
					}
				}
			}
		}
	}

}

//For Duplicacy
if (errorCount > 0)
{
	raise Duplicacy.Create("E");
	return false;
}

return true;